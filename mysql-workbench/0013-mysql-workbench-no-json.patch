diff -Pdpru mysql-workbench-community-6.3.5-src.orig/backend/wbpublic/objimpl/db.query/db_query_Resultset.cpp 
mysql-workbench-community-6.3.5-src/backend/wbpublic/objimpl/db.query/db_query_Resultset.cpp
--- mysql-workbench-community-6.3.5-src.orig/backend/wbpublic/objimpl/db.query/db_query_Resultset.cpp	2015-10-17 16:35:49.000000000 +0200
+++ mysql-workbench-community-6.3.5-src/backend/wbpublic/objimpl/db.query/db_query_Resultset.cpp	2015-11-12 06:33:10.787604909 +0100
@@ -314,9 +314,9 @@ public:
         case sql::DataType::SET:
           type = "string";
           break;
-        case sql::DataType::JSON:
-          type = "json";
-          break;
+//        case sql::DataType::JSON:
+//          type = "json";
+//          break;
         case sql::DataType::SQLNULL:
           type = "null";
           break;
diff -Pdpru mysql-workbench-community-6.3.5-src.orig/plugins/migration/copytable/copytable.cpp mysql-workbench-community-6.3.5-src/plugins/migration/copytable/copytable.cpp
--- mysql-workbench-community-6.3.5-src.orig/plugins/migration/copytable/copytable.cpp	2015-10-17 16:35:48.000000000 +0200
+++ mysql-workbench-community-6.3.5-src/plugins/migration/copytable/copytable.cpp	2015-11-12 00:02:35.378227904 +0100
@@ -109,8 +109,8 @@ static const char *mysql_field_type_to_n
       return "MYSQL_TYPE_STRING";
     case MYSQL_TYPE_GEOMETRY:
       return "MYSQL_TYPE_GEOMETRY";
-    case MYSQL_TYPE_JSON:
-      return "MYSQL_TYPE_JSON";
+//    case MYSQL_TYPE_JSON:
+//      return "MYSQL_TYPE_JSON";
     default:
       return "UNKNOWN";
   }
@@ -241,7 +241,7 @@ RowBuffer::RowBuffer(boost::shared_ptr<s
       case MYSQL_TYPE_STRING:
       case MYSQL_TYPE_VAR_STRING:
       case MYSQL_TYPE_BIT:
-      case MYSQL_TYPE_JSON:
+//      case MYSQL_TYPE_JSON:
         if (!col->is_long_data)
           bind.buffer_length = (unsigned)col->source_length + 1;
 
@@ -1393,7 +1393,7 @@ bool MySQLCopyDataSource::fetch_row(RowB
               rowbuffer[index].buffer_type == MYSQL_TYPE_MEDIUM_BLOB ||
               rowbuffer[index].buffer_type == MYSQL_TYPE_LONG_BLOB || rowbuffer[index].buffer_type == MYSQL_TYPE_BLOB ||
               rowbuffer[index].buffer_type == MYSQL_TYPE_STRING ||
-              rowbuffer[index].buffer_type == MYSQL_TYPE_GEOMETRY || rowbuffer[index].buffer_type == MYSQL_TYPE_JSON) {
+              rowbuffer[index].buffer_type == MYSQL_TYPE_GEOMETRY) {
             if (rowbuffer[index].buffer_length)
               free(rowbuffer[index].buffer);
 
@@ -2162,7 +2162,7 @@ bool MySQLCopyDataTarget::append_bulk_co
       case MYSQL_TYPE_STRING:
       case MYSQL_TYPE_ENUM:
       case MYSQL_TYPE_SET:
-      case MYSQL_TYPE_JSON:
+//      case MYSQL_TYPE_JSON:
         _bulk_insert_record.append("'", 1);
         ret_val = _bulk_insert_record.append_escaped((char *)(*_row_buffer)[col_index].buffer,
                                                      *(*_row_buffer)[col_index].length);

